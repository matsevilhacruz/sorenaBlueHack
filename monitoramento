#include <DHT11.h>

int T = 1;
int carga;
int pin=4;
DHT11 dht11(pin); 

int segundo,minuto, hora, dia, mes,ano;
unsigned long UtlTime;
 
int sensor = 0;      //Pino analógico em que o sensor está conectado.
int valorSensor = 0; //Usada para ler o valor do sensor em tempo real.
 
const int ledVerde = 8;
const int ledAmarelo = 9;
const int ledVermelho = 10;
 
//Função setup, executado uma vez ao ligar o Arduino.
void setup(){


   UtlTime=0;
    minuto=0;
    hora=0;
    dia=0;
    mes=0;
    ano=0;
    carga=0;
  
  //Ativando o serial monitor que exibirá os valores lidos no sensor.
  Serial.begin(115200);
if(T==1){
  Serial.print("\nEntre Minuto:");
    while(minuto==0)
    {
    if (Serial.available() > 0)
    {

    minuto= Serial.parseInt();

    }
    }

    Serial.print("\nEntre Hora:");
    while(hora==0)
    {
    if (Serial.available() > 0)
    {

    hora= Serial.parseInt();

    }
    }

    Serial.print("\nEntre Dia:");
    while(dia==0)
    {
    if (Serial.available() > 0)
    {

    dia= Serial.parseInt();

    }
    }
    Serial.print("\nEntre Mes:");
    while(mes==0)
    {
    if (Serial.available() > 0)
    {

    mes= Serial.parseInt();

    }
    }
    Serial.print("\nEntre Ano:");
    Serial.print("\n");
    while(ano==0)
    {
    if (Serial.available() > 0)
    {

    ano= Serial.parseInt();

    }
    }


  
  // while (!Serial) {
     // ; // wait for serial port to connect. Needed for Leonardo only
   //}
   
  //Definindo pinos digitais dos leds como de saída.
  



  //Dados da Carga
 Serial.print("\nEntre Com a carga: ");


 
  
    if (Serial.available() > 0)
    {
      carga= (Serial.parseInt());
      switch(carga)
      {
                
      //if(Serial.read() == '10'){
        case 1:
    Serial.print("{\"TransportId\":");
    Serial.print(1);
    Serial.print(",\"Carga A do Fornecedor\":");
    Serial.print("Blue Bull");
    Serial.print(",\"Saída\":");      
    Serial.print(dia);
    Serial.print(",\"/\":");
    Serial.print(mes);
    Serial.print(",\"/\":");
    Serial.print(ano);
    Serial.print(",\"Hora\":");
    Serial.print(hora);
    Serial.print(",\":\":");
    Serial.print(minuto);
    Serial.print(",\":\":");
    Serial.print(segundo);
    Serial.print(" ");
    Serial.print(",\"estes bois foram abatidos no dia\":");
    Serial.print(dia -1);
    Serial.print(",\"/\":");
    Serial.print(mes);
    Serial.print(",\"/\":");
    Serial.print(ano);
    //Serial.print(" - Esta carga carrega os Y cortes");
    Serial.print(",\"Saíndo de\":");
    Serial.print("Campinas");
    Serial.print(",\"Chega em\":");
    Serial.print("Sao Paulo");
    Serial.print(",\"Com Previsao de chegada em\":");
    Serial.print("2 horas e 20 minutos");
    Serial.print(",\"Hora prevista para chegada\":");
    Serial.print(hora +2);
    Serial.print(",\":\":");
    Serial.print(minuto + 20);
    Serial.print("}");
    Serial.println();
        break; 
      //}else
       //if(Serial.read() == '11'){
        case 2:
    Serial.print("{\"TransportId\":");
    Serial.print(2);
    Serial.print(",\"Carga B do Fornecedor\":");
    Serial.print("SBK");
    Serial.print(",\"Saída\":");      
    Serial.print(dia);
    Serial.print(",\"/\":");
    Serial.print(mes);
    Serial.print(",\"/\":");
    Serial.print(ano);
    Serial.print(",\"Hora\":");
    Serial.print(hora);
    Serial.print(",\":\":");
    Serial.print(minuto);
    Serial.print(",\":\":");
    Serial.print(segundo);
    Serial.print(" ");
    Serial.print(",\"estes bois foram abatidos no dia\":");
    Serial.print(dia -1);
    Serial.print(",\"/\":");
    Serial.print(mes);
    Serial.print(",\"/\":");
    Serial.print(ano);
    Serial.print(",\"Saíndo de\":");
    Serial.print("Cotia");
    Serial.print(",\"Chega em\":");
    Serial.print("Sao Paulo");
    Serial.print(",\"Com Previsao de chegada em\":");
    Serial.print("1 hora");
    Serial.print(",\"Hora prevista para chegada\":");
    Serial.print(hora +1);
    Serial.print(",\":\":");
    Serial.print(minuto);
    Serial.print("}");
    Serial.println();  
        break; 
      // }else
      //if(Serial.read() == '12'){
        case 3:
    Serial.print("{\"TransportId\":");
    Serial.print(3);
    Serial.print(",\"Carga C do Fornecedor\":");
    Serial.print("Bom Boi");
    Serial.print(",\"Saída\":");      
    Serial.print(dia);
    Serial.print(",\"/\":");
    Serial.print(mes);
    Serial.print(",\"/\":");
    Serial.print(ano);
    Serial.print(",\"Hora\":");
    Serial.print(hora);
    Serial.print(",\":\":");
    Serial.print(minuto);
    Serial.print(",\":\":");
    Serial.print(segundo);
    Serial.print(" ");
    Serial.print(",\"estes bois foram abatidos no dia\":");
    Serial.print(dia -1);
    Serial.print(",\"/\":");
    Serial.print(mes);
    Serial.print(",\"/\":");
    Serial.print(ano);
    Serial.print(",\"Saíndo de\":");
    Serial.print("São Carlos");
    Serial.print(",\"Chega em\":");
    Serial.print("Sao Paulo");
    Serial.print(",\"Com Previsao de chegada em\":");
    Serial.print("4 horas");
    Serial.print(",\"Hora prevista para chegada\":");
    Serial.print(hora +4);
    Serial.print(",\":\":");
    Serial.print(minuto);
    Serial.print("}");
    Serial.println(); 
        break; 
      
     
    }
    }
T = 0;
pinMode(ledVerde,OUTPUT);
  pinMode(ledAmarelo,OUTPUT);
  pinMode(ledVermelho,OUTPUT);
    
}
}
//Função loop, executado enquanto o Arduino estiver ligado.
void loop(){

//if(carga == 'Z'){
  


//

  if(millis()-UtlTime<0)
    {
    UtlTime=millis();
    }else
    {
    segundo=int((millis()-UtlTime)/1000);
    }
    if(segundo>59)
    {
    segundo=0;
    minuto++;
    UtlTime=millis();

    if(minuto>59)
    {
    hora++;
    minuto=0;
    if(hora>23)
    {
    dia++;
    hora=0;

    if(mes==1||mes==3||mes==5||mes==7||mes==8||mes==10||mes==12)
    {
    if(dia>31)
    {
    dia=1;
    mes++;
    if(mes>12)
    {
    ano++;
    mes=1;
    }
    }
    }
    else if(mes==2)
    {
    if(ano%400==0)
    {
    if(dia>29)
    {
    dia=1;
    mes++;
    }

    }
    else if((ano%4==0)&&(ano%100!=0))
    {
    if(dia>29)
    {
    dia=1;
    mes++;
    }

    }
    else
    {
    if(dia>28)
    {
    dia=1;
    mes++;
    }
    }
    }
    else
    {
    if(dia>30)
    {
    dia=1;
    mes++;
    }
    }
    }
    }
    }
   
  //Lendo o valor do sensor.
  int valorSensor = analogRead(sensor);
  // variavel do sen. temp 
  int err;
  float temp, humi;

  // if sensor de temperatura
   if((err=dht11.read(humi, temp))==0)
  {
    // temperatura media 24°C
    if((temp)>= 26){

    Serial.print(dia);
    Serial.print("/");
    Serial.print(mes);
    Serial.print("/");
    Serial.print(ano);
    Serial.print(" ");
    Serial.print(hora);
    Serial.print(":");
    Serial.print(minuto);
    Serial.print(":");
    Serial.print(segundo);
    Serial.print(" ");
    
    }
    Serial.print("temperature:");
    Serial.print(temp);
    Serial.print(" humidity:");
    Serial.print(humi);
    //Serial.print(valorSensor);
    Serial.println("\n");
    
  }
  else
  {
    Serial.println();
    Serial.print("Error No :");
    Serial.print(err);
    Serial.println();    
  }
  delay(DHT11_RETRY_DELAY); //delay for reread
   
  //Valores da luminosidade podem ser alterados conforme necessidade. 
 
  //Luminosidade baixa.
  if (valorSensor < 150) {
    apagaLeds();
    digitalWrite(ledVermelho,HIGH);
  }
   
  //Luminosidade média.
  if (valorSensor >= 150 && valorSensor <= 400) {
    apagaLeds();
    digitalWrite(ledVermelho, HIGH);
    digitalWrite(ledAmarelo,HIGH);
  }
   
  //Luminosidade alta.
  if (valorSensor > 400) {
    apagaLeds();
    digitalWrite(ledVerde,HIGH);
    digitalWrite(ledVermelho, HIGH);
    digitalWrite(ledAmarelo,HIGH);

    Serial.print(dia);
    Serial.print("/");
    Serial.print(mes);
    Serial.print("/");
    Serial.print(ano);
    Serial.print(" ");
    Serial.print(hora);
    Serial.print(":");
    Serial.print(minuto);
    Serial.print(":");
    Serial.print(segundo);
    Serial.print(" ");

  }
 
}
 
//Função criada para apagar todos os leds de uma vez.
void apagaLeds() {
  digitalWrite(ledVerde,LOW);
  digitalWrite(ledAmarelo,LOW);
  digitalWrite(ledVermelho,LOW);
}
